---
# TODO: /usr/lib/systemd/logind.conf HandleLidSwitch=suspend HandleLidSwitch=ignore
# TODO: grub on raid1
# TODO: remote desktop gnome - new way password and auto login user
# TODO: why openwrt in clevo group

# # Clear old credentials
# secret-tool clear xdg:schema org.gnome.RemoteDesktop.RdpCredentials

# # Store new credentials
# echo -n "{'username': 'myusername', 'password': 'mypassword'}" | secret-tool store --label "GNOME Remote Desktop RDP credentials" xdg:schema org.gnome.RemoteDesktop.RdpCredentials -b

# # Verify credentials (optional)
# secret-tool lookup xdg:schema org.gnome.RemoteDesktop.RdpCredentials

# TODO: add kernel pkgs locking version based on flag
# TODO: fix sysctl bridge entries in hypervisor playbook
# TODO: add check if user deploy exists then switch ansible_user
# TODO: add nvidia driver install
# TODO: add adguard on openwrt
# TODO: add openwrt update pkgs
# TODO: add tasmota Update
# TODO: add zabbix install

# - hosts: clevo
#   gather_facts: false
#   tasks:
#     # - name: Display all host groups
#     #   debug:
#     #     msg: "{{ groups.keys() }}"
#     # - name: Display all host groups and their hosts
#     #   debug:
#     #     msg: "Group {{ item }} contains hosts: {{ groups[item] }}"
#     #   loop: "{{ groups.keys() }}"
#     - name: Show groups for a specific host
#       debug:
#         var: hostvars[inventory_hostname]['group_names']

- name: Bootstrap host
  hosts: localhost
  become: false
  tasks:
    # - name: Change private key permissions
    #   ansible.builtin.raw: >-
    #     chmod -c 644 {{ ansible_ssh_private_key_file  }}
    #   register: private_key_perms
    #   changed_when: private_key_perms.stdout != ""
    - name: Change private key permissions
      file:
        path: "{{ ansible_ssh_private_key_file }}"
        mode: 0600

- name: Fedora on Clevo
  ansible.builtin.import_playbook: fedora.yml
  vars:
    hosts_to_deploy: mikeeClevo

- name: Update all clevo vms and host
  hosts: clevo!openwrt_office
  become: true
  tasks:
    # - name: Clean DNF
    #   shell: dnf clean all

    - import_tasks: ../roles/pkg_mgmt/dnf/tasks/dnf5.yml
    - import_tasks: ../roles/pkg_mgmt/dnf/tasks/update.yml

    - name: Check if reboot required
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    # TODO: Fix reboot on Clevo
    - name: Reboot if required
      reboot:
      when:
        - reboot_required_file.stat.exists == true
        - inventory_hostname != "mikeeClevo"

- name: Provision Clevo
  hosts:
    - clevo!openwrt_office
  become: true
  roles:
    - servers/bootstrap

- name: Set variables on an imported playbook
  ansible.builtin.import_playbook: generic-core.yml
  vars:
    hosts_to_deploy: vms

- name: Provision DNS1
  hosts:
    - dns1
  become: true
  roles:
    - servers/network-static-dns
    - apps/docker
    - servers/apps/coredns
    - servers/apps/letsencrypt-coredns

- name: Provision DNS2
  hosts:
    - dns2
  become: true
  roles:
    - servers/network-static-dns
    - apps/docker
    - servers/apps/adguard-home

- name: Provision GW1
  hosts:
    - gw1
  become: true
  roles:
    - servers/network-static-dns
    - apps/openvpn-client
    - servers/apps/vpn-gw

- name: Provision VPN1
  hosts:
    - vpn1
  become: true
  roles:
    - servers/network-static-dns
    - servers/apps/openvpn
    - servers/apps/vpn-gw

- name: Provision mikeeClevo
  hosts:
    - mikeeClevo
  become: true
  roles:
    - desktop/machines/clevo_p170sm/tuxedo
    - servers/apps/nginx
    # - servers/apps/home-assistant
    - servers/apps/ollama-docker
    - servers/apps/jenkins
    - servers/apps/frigate
  tasks:
    - name: Prevent multiple packages from being updated
      community.general.dnf_versionlock:
        name:
          - kernel
          - kernel-core
          - kernel-devel
          - kernel-devel-matched
          - kernel-modules
          - kernel-modules-core
          - kernel-modules-extra
          - kernel-tools
          - kernel-tools-libs
          - kmod-nvidia-open-dkms
          - nvidia-driver
          - nvidia-driver-cuda
        state: present
    # - name: Delete all entries in the locklist of versionlock
    #   community.general.dnf_versionlock:
    #     state: clean

- name: Cleanup Docker
  hosts: clevo:!gw1:!vpn1
  become: true
  tasks:
    - name: Cleanup Docker
      shell: docker system prune -f --volumes
