---
- name: Install gnome-shell
  ansible.builtin.package:
    name: gnome-shell
    state: present

- name: Parse Gnome Shell version
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.shell: gnome-shell --version | sed 's/[^0-9.]*\([0-9.]*\).*/\1/'
  register: parse_gnome_shell_version
  changed_when: false

- ansible.builtin.set_fact:
    gnome_shell_version: '{{ parse_gnome_shell_version.stdout }}'

- name: Get Gnome Shell extension info
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.uri:
    url: https://extensions.gnome.org/extension-info/?pk={{ item }}&shell_version={{ gnome_shell_version }}
    return_content: true
  loop: '{{ gnome_extension_ids }}'
  register: gnome_shell_extension_info

- name: Create temporary download directory
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.tempfile:
    state: directory
    suffix: ".gnome_extension_download"
  register: gnome_extension_download_dir
  changed_when: false

- block:
    - name: Check for Gnome Shell extensions already installed
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.stat:
        path: ~/.local/share/gnome-shell/extensions/{{ item.json.uuid }}
      register: st_existing_extensions
      loop: "{{ gnome_shell_extension_info.results }}"
      loop_control:
        label: "{{ item.json.name }}"

    - name: Download Gnome Shell extensions
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.get_url:
        url: https://extensions.gnome.org{{ item.item.json.download_url }}
        dest: "{{ gnome_extension_download_dir.path }}/{{ item.item.json.uuid }}.zip"
      loop: "{{ st_existing_extensions.results }}"
      loop_control:
        label: "{{ item.item.json.name }}"
      when: not item.stat.exists
      register: download_gnome_shell_extensions

    - name: Create install directories
      ansible.builtin.file:
        path: "~{{ user_name }}/.local/share/gnome-shell/extensions/{{ item.item.item.json.uuid }}"
        state: directory
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: "0775"
      loop: "{{ download_gnome_shell_extensions.results }}"
      loop_control:
        label: "{{ item.item.item.json.name }}"
      when: not item is skipped

    - name: Install Gnome Shell extensions
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.unarchive:
        src: "{{ item.dest }}"
        dest: ~/.local/share/gnome-shell/extensions/{{ item.item.item.json.uuid }}
        remote_src: true
      loop: "{{ download_gnome_shell_extensions.results }}"
      loop_control:
        label: "{{ item.item.item.json.name }}"
      when: not item is skipped

    - name: Generate schemas Gnome Shell extensions
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.shell: glib-compile-schemas .
      args:
        chdir: ~/.local/share/gnome-shell/extensions/{{ item.item.item.json.uuid }}/schemas
      loop: "{{ download_gnome_shell_extensions.results }}"
      loop_control:
        label: "{{ item.item.item.json.name }}"
      when: not item is skipped
      register: gnome_shell_extension_info

    - name: Enable Gnome Shell extensions
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.shell: gnome-extensions enable "{{ item.item.item.json.uuid }}"
      loop: "{{ download_gnome_shell_extensions.results }}"
      loop_control:
        label: "{{ item.item.item.json.name }}"
      when: not item is skipped
      register: gnome_shell_extension_info

    # - name: Enable Gnome Shell extensions
    #   become: true
    #   become_user: "{{ user_name }}"
    #   ansible.builtin.command: gnome-shell-extension-tool --enable-extension {{ item.item.item.json.uuid }}
    #   register: enable_gnome_shell_extensions
    #   loop: "{{ download_gnome_shell_extensions.results }}"
    #   loop_control:
    #     label: "{{ item.item.item.json.name }}"
    #   when: not item is skipped
  always:
    - name: Delete temporary download directory
      ansible.builtin.file:
        path: "{{ gnome_extension_download_dir.path }}"
        state: absent
      changed_when: false
