---
- name: Set vars
  set_fact:
    vm_disk_path: "{{ libvirt_images_dir }}/{{ vm.name }}.qcow2"
    vm_cloud_init_path: "{{ cloud_init_iso_dir }}/{{ vm.name }}.iso"

- name: "Create directory for cloud-init configs"
  file:
    path: "{{ cloud_init_src_dir }}/{{ vm.name }}"
    state: directory
    owner: qemu
    group: qemu

- name: Create cloud-init config
  template:
    src: "{{ item.src }}"
    dest: "{{ cloud_init_src_dir }}/{{ vm.name }}/{{ item.dest }}"
  loop: "{{ cloud_init_config_files }}"

- name: Create CD-ROM ISO with cloud-init config
  shell: |
    genisoimage -output {{ vm_cloud_init_path }} \
      -volid cidata \
      -joliet \
      -r {% for item in cloud_init_config_files %} {{ cloud_init_src_dir }}/{{ vm.name }}/{{ item.dest }} {% endfor %} &>> "{{ cloud_init_src_dir }}/{{ vm.name }}/logs"

- name: Destroy the domain with XML specification
  virt:
    name: "{{ vm.name }}"
    command: destroy
  ignore_errors: true

- name: Remove storage
  file:
    path: "{{ vm_disk_path }}"
    state: absent

- name: Undefine the domain with XML specification
  virt:
    name: "{{ vm.name }}"
    command: undefine
  ignore_errors: true

- name: Clone template storage
  copy:
    remote_src: true
    src: "{{ libvirt_images_dir }}/{{ cloud_image_name }}"
    dest: "{{ vm_disk_path }}"
    owner: qemu
    group: qemu
    mode: 0600

# - name: Extend disk image
#   shell: |
#     virsh --connect qemu:///system vol-resize "{{ images_dir }}/{{ instance_id }}.qcow2" "{{ vm.disk_size }}"
#     /sbin/xfs_growfs "{{ images_dir }}/{{ vm.name }}.qcow2"

- name: Define the domain with XML specification
  virt:
    name: "{{ vm.name }}"
    command: define
    xml: "{{ lookup('template', 'vm.xml.j2') }}"

- name: Start the vm after definition
  virt:
    name: "{{ vm.name }}"
    state: running
    autostart: yes
