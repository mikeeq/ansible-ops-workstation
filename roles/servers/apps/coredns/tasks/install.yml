---
- name: Install Dependencies
  package:
    name: bind-utils
    state: present

- name: Ensure install dir exists
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ install_path }}"
    - "{{ install_path }}/config"

- name: Find current serial number
  shell: echo -n $(cat {{ coredns_zone_filename }} | grep -w '; serial' | cut -d';' -f1)
  register: current_serial_number_res
  failed_when: current_serial_number_res.stdout == ""
  changed_when: false
  ignore_errors: true
  args:
    chdir: "{{ install_path }}/config"

- name: Create vars
  set_fact:
    current_serial_number : >-
      {%- if current_serial_number_res.stdout == '' -%}
        {{ lookup('pipe','date +%Y%m%d') }}01
      {%- else -%}
        {{ current_serial_number_res.stdout | int }}
      {%- endif -%}

- name: Configure docker-compose file
  template:
    src: "{{ item }}"
    dest: "{{ install_path }}/{{ item }}"
    mode: 0664
  loop:
    - docker-compose.yml
    - config/Corefile

- name: Check coredns db file if any changes
  template:
    src: "{{ coredns_zone_file_path }}/{{ coredns_zone_filename }}"
    dest: "{{ install_path }}/config/{{ coredns_zone_filename }}"
    mode: 0664
    backup: true
  vars:
    serial_number: "{{ current_serial_number | int }}"
  register: db_res

- name: Configure coredns db file
  template:
    src: "{{ coredns_zone_file_path }}/{{ coredns_zone_filename }}"
    dest: "{{ install_path }}/config/{{ coredns_zone_filename }}"
    mode: 0664
  vars:
    serial_number: "{{ current_serial_number | int + 1 }}"
  when:
    - db_res.changed
    - current_serial_number_res.stdout != ''

- name: Pull Docker image using docker-compose
  command: docker-compose pull
  changed_when: pull_result.stderr_lines | length > 2
  register: pull_result
  args:
    chdir: "{{ install_path }}"

- name: Run using docker-compose
  command: docker-compose up -d
  changed_when: up_result.stderr_lines | length > 2
  register: up_result
  args:
    chdir: "{{ install_path }}"
