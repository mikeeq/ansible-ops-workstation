# https://docs.docker.com/compose/compose-file/compose-file-v3/
---
version: '3.8'

networks:
  monitoring:

services:
  grafana:
    image: grafana/grafana-oss:latest
    container_name: monitoring_grafana
    user: "0"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - monitoring
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    user: "0"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: monitoring_node-exporter
    ports:
      - "9100:9100"
    volumes:
      - '/:/host:ro,rslave'
    command:
      - '--path.rootfs=/host'
    networks:
      - monitoring
    restart: unless-stopped

  process_exporter:
    image: ncabatoff/process-exporter:latest
    container_name: monitoring_process-exporter
    ports:
      - "9256:9256"
    volumes:
      - /proc:/host/proc
      - ./process-exporter.yaml:/config/process-exporter.yml # Optional config
    command:
      - '--procfs'
      - '/host/proc'
      - '-config.path=/config/process-exporter.yml'
    networks:
      - monitoring
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "28080:8080"
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: monitoring_loki
    user: "0"
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/loki
    networks:
      - monitoring
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: monitoring_promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring
    restart: unless-stopped

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: monitoring_nginx_exporter
    ports:
      - "9113:9113"
    volumes:
      - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    command: -nginx.scrape-uri=http://localhost/status
    networks:
      - monitoring
    restart: unless-stopped

# Uncomment if you want to use volumes for persistent data

# volumes:
#   prometheus_data:
#   grafana_data:
