---
- name: Ensure install dir exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ install_path }}"
    - "{{ install_path }}/grafana/provisioning/dashboards"
    - "{{ install_path }}/grafana/provisioning/datasources"

- name: Configure docker-compose file
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ install_path }}/{{ item }}"
    mode: "0664"
    backup: true
  loop:
    - docker-compose.yaml

- name: Configure config files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ install_path }}/{{ item }}"
    mode: "0664"
    backup: true
  loop:
    - prometheus.yaml
    - grafana/provisioning/datasources/prometheus.yaml
    - grafana/provisioning/datasources/loki.yaml
    - process-exporter.yaml
    - promtail-config.yaml

- name: Configure dashboards files
  ansible.builtin.copy:
    src: "templates/grafana/provisioning/dashboards/"
    dest: "{{ install_path }}/grafana/provisioning/dashboards/"
    mode: "0664"
    backup: true
    # mode :          # copy directories recursively
    # directory_mode:

- name: Pull Docker image using docker-compose
  ansible.builtin.command: docker-compose pull
  changed_when: pull_result.stderr_lines | length > 2
  register: pull_result
  args:
    chdir: "{{ install_path }}"

- name: Run using docker-compose
  ansible.builtin.command: docker-compose up -d
  changed_when: up_result.stderr_lines | length > 2
  register: up_result
  args:
    chdir: "{{ install_path }}"

# - name: Restart using docker-compose
#   ansible.builtin.command: docker-compose restart
#   args:
#     chdir: "{{ install_path }}"
